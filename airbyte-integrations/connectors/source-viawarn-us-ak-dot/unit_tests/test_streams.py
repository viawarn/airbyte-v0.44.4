#
# Copyright (c) 2023 Airbyte, Inc., all rights reserved.
#

from unittest.mock import MagicMock

import pytest
from source_viawarn_us_ak_dot.source import ViawarnUsAkDotStream, Event, Sign, Cond

import json
from requests import Response


with open("secrets/config.json", "r") as f:
    config = json.load(f)

@pytest.fixture
def patch_base_class(mocker):
    mocker.patch.object(ViawarnUsAkDotStream, "__abstractmethods__", set())

def test_next_page_token(patch_base_class):
    inputs = {"response": MagicMock()}
    stream = ViawarnUsAkDotStream(config)
    expected_token = None
    assert stream.next_page_token(**inputs) == expected_token
def test_request_params(patch_base_class):
    inputs = {"stream_slice": MagicMock(), "stream_state": MagicMock(), "next_page_token": MagicMock()}
    stream = ViawarnUsAkDotStream(config)
    expected_params = {"key":config["developer_api_key"], "format": "json"}
    assert stream.request_params(**inputs) == expected_params
def test_path(patch_base_class):
    stream = Event(config)
    inputs = {"stream_state":MagicMock(), "stream_slice":MagicMock(), "next_page_token":MagicMock()}
    expected_path = "event"
    assert stream.path(**inputs) == expected_path
def test_parse_response_event():
    stream = Event(config)
    # input parameters
    # Create an instance of the response object
    response = Response()
    data = [{'ID': 'ERS--2334', 'Organization': 'ERS', 'RoadwayName': 'Steese Expy', 'DirectionOfTravel': 'Both Directions', 'Description': 'Fairbanks: The Airport/Steese Expwy intersection will have lane restrictions as work continues. There will also be lane restrictions on the Chena River Bridge along the Steese Expwy while railing is installed. Keep an eye out for workers and drive cautiously.\xa0', 'Reported': 1683322380, 'LastUpdated': 1684168036, 'StartDate': 1683322380, 'PlannedEndDate': None, 'LanesAffected': 'No Data', 'Latitude': 64.834732, 'Longitude': -147.706894, 'LatitudeSecondary': 0.0, 'LongitudeSecondary': 0.0, 'EventType': 'roadwork', 'IsFullClosure': False, 'Restrictions': {'Width': None, 'Height': None, 'Length': None, 'Weight': None, 'Speed': None}, 'DetourPolyline': None, 'DetourInstructions': None, 'EventSubType': 'Road Construction', 'Details': 'AIRPORT WAY / STEESE EXPRESSWAY RECONSTRUCTION (HSIP): Utility work is ongoing for this project. There will be lane restrictions 24 hours a day through the intersection as work continues. There will be lane restrictions on the Chena River Bridge along the Steese Expressway as workers install railing on the bridge. Keep an eye out for staff and please drive carefully.| Project website: https://dot.alaska.gov/nreg/garsreconstruction/ | More project information at https://dot.alaska.gov/construction'}]
    # Convert data to JSON
    json_data = json.dumps(data)
    #add data as the content of response and encode it 
    response._content=json_data.encode("utf8")
    expected_parsed_object ={"ID": "ERS--2334", "Organization": "ERS", "RoadwayName": "Steese Expy", "DirectionOfTravel": "Both Directions", "Description": "Fairbanks: The Airport/Steese Expwy intersection will have lane restrictions as work continues. There will also be lane restrictions on the Chena River Bridge along the Steese Expwy while railing is installed. Keep an eye out for workers and drive cautiously.\u00a0", "Reported": 1683322380, "LastUpdated": 1684168036, "StartDate": 1683322380, "PlannedEndDate": None, "LanesAffected": "No Data", "Latitude": 64.834732, "Longitude": -147.706894, "LatitudeSecondary": 0.0, "LongitudeSecondary": 0.0, "EventType": "roadwork", "IsFullClosure": False, "Restrictions": {"Width": None, "Height": None, "Length": None, "Weight": None, "Speed": None}, "DetourPolyline": None, "DetourInstructions": None, "EventSubType": "Road Construction", "Details": "AIRPORT WAY / STEESE EXPRESSWAY RECONSTRUCTION (HSIP): Utility work is ongoing for this project. There will be lane restrictions 24 hours a day through the intersection as work continues. There will be lane restrictions on the Chena River Bridge along the Steese Expressway as workers install railing on the bridge. Keep an eye out for staff and please drive carefully.| Project website: https://dot.alaska.gov/nreg/garsreconstruction/ | More project information at https://dot.alaska.gov/construction", "vwid": "0adcab56-3abf-45b0-9f99-d56ac58280e1", "ewkt": "SRID=4326;LINESTRING(-147.706894 64.834732,-147.706894 64.834732)"}
    result=stream.parse_response(response,stream_state=MagicMock())
    parsed_object = next(result)
    vwid=parsed_object.get("vwid")
    assert vwid is not None
    expected_parsed_object['vwid'] = vwid
    assert parsed_object == expected_parsed_object

def test_parse_response_sign():
    stream = Sign(config)
    # input parameters
    # Create an instance of the response object
    response = Response()
    data = [{"Id": "SYSTEM--216.67.106.207", "Name": "Seward", "Roadway": "Seward Highway", "DirectionOfTravel": "Southbound", "Messages": ["NO_MESSAGE"], "Latitude": 61.054001, "Longitude": -149.798675, "LastUpdated": 1685026503}]
    # Convert data to JSON
    json_data = json.dumps(data)
    #add data as the content of response and encode it 
    response._content=json_data.encode("utf8")
    # TODO: replace this with your expected parced object
    expected_parsed_object = {"Id": "SYSTEM--216.67.106.207", "Name": "Seward", "Roadway": "Seward Highway", "DirectionOfTravel": "Southbound", "Messages": ["NO_MESSAGE"], "Latitude": 61.054001, "Longitude": -149.798675, "LastUpdated": 1685026503, "vwid": "526ff3fadbe6198bfa61028417e43d45f17679b350816106c86b43b580fc6e1e", "ewkt": "SRID=4326;POINT(-149.798675 61.054001)"}
    result=stream.parse_response(response,stream_state=MagicMock())
    parsed_object = next(result)
    vwid=parsed_object.get("vwid")
    assert vwid is not None
    expected_parsed_object['vwid'] = vwid
    assert parsed_object == expected_parsed_object
def test_parse_response_cond():
    stream = Cond(config)
    # input parameters
    # Create an instance of the response object
    response = Response()
    data = [{"Id": 77, "LocationDescription": "from Taylor Hwy to Canadian Border", "Overall Status": "Fair", "Surface Conditions": [], "Atmospheric Conditions": [], "Warnings": ["Do not pass", "Drive with headlights on", "Reduce your speed", "Snow removal equipment on roadway", "Stay back 200 feet from snowplows", "Crew and machinery working in the area"], "Snow (inches) Min": None, "Temperature (F) Min": None, "Wind Type": None, "Wind Direction": None, "Wind Speed (MPH) Min": None, "Snow (inches) Max": None, "Temperature (F) Max": None, "Wind Speed (MPH) Max": None, "AreaName": "O'Brien/Eagle/Southfork", "RoadwayName": "Top of the World Highway", "EncodedPolyline": "mcnfKp}t}YRYVa@\\o@JSHSJUHUHWHWHWFYHYFYD]D[D]D]B_@B_@B_@@_@@_@@_@@_@?a@@_@?a@?_@?_@?a@?_@Aa@?_@Aa@?_@A_@Aa@A_@?a@Ac@A]?_@?_@?a@?a@@_@@_@@a@@_@B_@B]D_@B_@B]D_@B]B_@D]B_@D_@B]D_@B]D_@B]D]D]D_@D]D]D[F]F[FYHYFWJUHSJSJQJSJQJQJSJQJSHQJQJSJQJSJQHUJSHUJUHWHUHWHWHWHYFWHWHWHWJUHUJSHSJSJQJQJQJQJQLQJQJOJQJOJQLOJOJOLMJMLKLKLKJILILILELGLELELELGLELGLELILGLILKJKLMJKLOJMLOJMLOJMLMJMLMJMLKJKLKLKLILILILGLGLGLGLGLELGJGNGJGLGLGLILGLGLELGLELELENELELCLCLALCN?L?L?L?L@N@L@L?L@L?N@L?L?L?NALALALALALANALAL?LALAL?NAL?L?L?L?N?L@L@L@L@LBNBLBLBLBLDLDLDLDLDLDLDNBLBL@LBL@L?L@N?L?LAL?LALCLANALALALALAL?NALALALALALCLALCLCLENELELELGLGLGLILGJGLGLGNGLELCLELCLCLALCNCLCLELELGLGLIJKLKLMJOJMLQJQJQHSJUHUHUHYFWHYF[FYD[F[D[F]D[D]D]D]F]D]D]D]B]D]D]D]D]D]D]F]D]D[D]D]F]D[D]F[F[FYFYHYFWHWHWHUJUHUJSJSHSJSJQJSJQJQHSJQJQJQJQLOJQJOJOJOJQLMJOJOLMJMLKLKJILILGLGLGLGLELELELELCLELCLELELCLENCLCLCLCLCLAL?LAN?L?L?L@L?N@L@L@L@LBL@NBLBLDLBLBLBLBL?N@L?LALALCLELGLILKJKLMJOJQJQHQJSHUHWHWHYDYF]D[D]D]B]D_@B]B_@B_@B_@@_@B_@B]@a@B_@@]B_@B_@B_@@_@@_@@_@@a@A_@?_@A_@C_@E]E]E]G[E[G[G[G[E[G[G[E[G[G[E[G[G]E[E]E]E]C_@E]C_@C]E_@C]C_@C]C_@C_@C_@C_@C_@C_@A_@A_@?a@?_@@a@?_@@_@@a@?_@@a@A_@?_@C_@Aa@C]E]E]E]G]E]E]C]E]E]E_@C]E]E_@C]E]C_@E]C_@C]C_@E]C_@C_@C]C_@E]C_@C_@C]E_@C]C_@E]C_@C]E_@C_@C]C_@E]C_@C_@C]E_@C_@C]C_@C_@C_@A_@C_@A_@Aa@A_@A_@A_@?a@A_@?a@?_@?a@?_@?_@?a@@_@?a@@_@Ba@@_@B_@B]B_@B]D_@D]D]D[F[D]F[D[F]D[D]D]D]D]B]B_@D_@@]B_@B_@@_@B_@@_@Ba@@_@@_@@_@B_@@_@@_@@a@B_@@_@@_@@_@B_@@_@B_@B_@B_@@_@B_@D_@B]B_@D]B_@B]D_@B]D]B_@D]B_@D]B]D_@B]D]D_@B]B_@D]B_@D]B_@D]B]D_@D]B]D_@D[F]D[F[FYHYHWHWJSHSJQLOJMLKLILGLELGLELELCLELENCLELELELCLELELELELELELCLELENELCLELELCLELCLELELCNELELCLELELELELGLGLELILGLIJILKLILKJKLMJKLMJMLMJMLMJMLMJOLMJMLMJMLOJMLMJMLMJMLMJMLMJMLKLKJKLILILGLGLELCLCLANAL?L?L@L@LBNBLDLDLFLFLFLFLFLFLFJFLHLFLHLFLHLHLJLHLHJHLHLHLJLHJJLHLJLJLHLJJHLFLDNBL@LALELGLIJMJQJSHUHWFYFYF[F[F[D[F[F]D[F[D[F[F[F]D[FYF]F[D[F[F[D[F[F[D]F[D[F[D]F[D]F[D]F[D[D]F]D[D]D]F]D]D[D]D_@D[D]D]D]D]F]D[D]F[D]F[D[F[F[F[HYFYFYHYHWFWHYHWHWHUHWHWHWHWHUHWHWHUHWHWHUHWJWHUHWHWFWJWFUHWHWHWHWHWHUJWHWHUHWHWFWHWHWHYHWFWHYHWFYHWHYFWHYFYHYFWHYFYHYFYHYFWHYFYHYFYHYFYHYFYHYFYFYHYFYF[FYF[F[D[F[F[D[F]D[D]F]D[D_@B]D]D]B]D_@B]B_@B_@B_@B]B_@B_@@_@B_@@_@@a@@_@B_@@_@@a@?_@@_@@a@@_@@_@?a@@_@@_@@a@@_@@_@?a@@_@@a@@_@@_@@_@?a@@_@@a@@_@?_@@a@@_@@_@@a@@_@?_@@a@@_@@_@@a@@_@B_@@_@@_@Ba@@_@B_@B]@_@B_@B_@D_@B]B_@D_@B]D]D]B]D_@F]D[D]D]D]D]D]D[F]D]D]D[D]F]D[D]D]F[D]D]D[D]F]D]D]D]D[D]F]D]D[D]D]F[D]D]D]D[F]D]D]D]D]D[D]D]D]D]D]D]D]D]D]B_@D]D]D]B_@D]D]B_@D]D]B]D_@B]D_@D]B]D_@B]D]D_@B]D]B_@D]B_@D]B_@D]B_@B]D_@B]B_@B_@@_@B_@@_@B_@@a@@_@?_@@a@?_@@_@?a@?_@?_@?a@?_@?a@?_@?a@?_@?_@?a@?_@?a@?_@?a@?_@?a@?_@?_@?a@?_@?a@?_@?_@@a@@_@@_@@_@Ba@@]B_@B_@B_@B_@B]B_@D_@B]B_@B]D_@B]B_@B]D_@B]B_@B_@B]B_@D]B_@B_@B]B_@D]B_@B]D_@B]B_@D]B]D_@B]D]D]D]D]F[F[F[FYF[FYFYF[HYF[FYF[FYHYFYF[FYFYH[FYF[FYF[FYF[FYH[FYF[FYFYF[HYFYHWFYHYHWFWHYHWHWFYHWHWHWHWHWHWHUHWHWFWHYHWHWHWHWHWFWHWHWHYHWFWHWHYHWFYHYFYFYF[F[F[D[D]D]D]D]D]B]D_@B]D_@B]B_@B_@@_@B]B_@@_@@a@@_@@_@@_@@a@?_@?_@@a@?_@@a@?_@?_@?a@?_@@a@A_@?a@?_@?a@?_@?a@?_@?a@?_@?_@?a@@_@?a@?_@?a@?_@?a@@_@?_@@a@?_@@a@@_@?_@@a@B_@@_@@_@@a@B_@@_@B_@B_@@_@B_@@_@B_@@_@B_@B_@@_@B_@@_@B_@@_@B_@B_@@_@B_@B_@@_@B_@B_@@_@B_@B_@@_@B_@B_@@_@Ba@@_@B]@a@B_@B_@@]Ba@B_@@]Ba@B]@_@B_@@a@B_@B_@@_@B_@B_@@_@B_@@_@B_@B_@@_@B]B_@B_@D_@B]D]B_@D]B]D_@D]D[D]F]D[D]F[D]F[F[D[F[F[D]F[F[D[F[F[F[D[F[F[D[F]F[F[D[F[F[F[D[FYF[F[F[D[F[F[F[F[FYF[FYF[FYF[FYFYF[FYH[FYFYFYH[FYFYFYF[FYH[FYFYF[FYF[FYHYF[FYFYHYF[FYF[FYF[HYFYFYF[HYFYFYF[HYFYFYHYF[FYHYFYFYHYFYFYH[FYFYF[FYF[FYH[FYF[F[FYF[FYF[FYF[FYFYF[HYF[FYFYFYH[FYFYF[HYFYFYF[HYFYFYF[FYHYF[FYFYH[FYFYFYH[FYFYF[HYFYFYF[FYHYFYF[HYFYFYHYF[FYFYF[F[FYF[F[F[D[F[D]F]D[D]D]D]D]B]D]D_@D]D]B]D]D_@D]D]B]D]D]D]B_@D]D]D]B_@D]D]B]D_@D]D]D]B]D]D]D]D]D]D_@B]D]D]D]D]B_@D]D]D]B]D_@D]D]B]D]D_@D]D]B]D]D]D]D_@B]D]D]D]B_@D]D]B]D_@D]B]D]D_@D]B]D_@B]D]B_@D]B_@B]B_@B_@D_@B]B_@B_@B_@@]B_@B_@B_@B_@B_@B_@@_@B_@@_@B_@@_@B_@@_@@_@Ba@@_@@_@@_@@_@Ba@@_@@_@@a@?_@@_@@_@@a@@_@@_@@a@@_@?_@@a@@_@?_@@a@@_@@_@?a@@_@@_@?a@@_@?_@@a@@_@?a@@_@?_@@a@@_@?_@@a@@_@@_@?a@@_@@_@?a@@_@@_@?a@@_@@_@?a@@_@@_@?a@@_@@a@?_@@_@@a@?_@@_@@a@?_@@_@@a@?_@@a@@_@?_@@a@?_@@_@@a@@_@?_@@a@@_@?a@@_@@_@?a@@_@@_@?a@@_@?_@@a@@_@?a@@_@@_@?a@@_@?a@@_@?_@@a@?_@@a@?_@@_@?a@?_@@a@?_@?a@?_@?_@@a@?_@?a@?_@@a@?_@?_@?a@A_@?a@?_@A_@?a@A_@A_@?a@A_@A_@A_@Aa@A_@?a@A_@A_@A_@C_@A_@C_@E]AOKi@GYIWIWIWIUEKIUIUIWIUIWIUIWIWOe@CKKg@E]C_@C_@A_@?a@?_@@_@@a@B_@@_@@_@@_@@a@B_@@_@@_@@_@Ba@@_@@_@@_@B_@?OBq@@O@_@Bo@?OB_@@q@@O@_@@_@Ba@@_@@_@Bo@@_@@a@B_@@_@@_@B_@@a@@_@@_@B_@@_@@a@@_@@_@B_@@_@@_@Ba@@_@@_@B_@@_@@_@B_@@_@B_@@_@@a@B_@@_@@_@B_@@_@@_@B_@@_@@_@@a@@_@B_@@_@@_@B_@@_@@_@Do@@_@B_@@_@B_@B]@_@@_@B_@B_@@_@@MB_@D]B_@B_@B]D]B_@B]D_@B]B_@B]B_@B]D_@B]B_@@_@B_@B_@@_@@_@@_@@_@?_@@a@@_@@_@?_@@a@@_@@_@@_@?a@@_@?_@?a@@_@?_@?a@A_@?_@?a@@_@?a@@_@@_@B_@@_@B_@B_@B_@@]B_@B_@B_@@_@B_@B_@@_@B_@@_@B_@@_@B_@@_@B_@@_@B_@@a@B]Ba@@_@B_@B]@_@B_@B_@B_@B_@D]B_@D]B_@B]D_@B]D]D_@B]D]D_@B]D]D]B]D_@D[D]F]D]F[D[F[FYF[FYHYFYF[HYFYFYHYFYFYHYFYFYFYHYFYFYHYFWHYHWFYHWHWHWHWHWHUHWHWHUHWHUHWHWHUHWHWHWHUHWHWHWFWHWHWHWHUHWHWHWHUHWHWHWHWHUHWHWHWHUHWHWHUHWFWHWHWHUHWHYFWHYFYD[F]D[D]B_@B_@B]@_@B_@@_@B_@@_@@_@@a@@_@@_@@_@@_@B_@@_@@_@@_@B_@@_@B_@@_@B_@B_@B_@@]B_@B_@D]B_@B]D]B_@D]D]B]D]D]D]B]D]D]D]D]D]D]B]D]D]B]B_@D]B]B_@B_@B]D_@B]B]D]D_@D[D]D]D[F]D[D[F]D[F[D]F[D[F[D[F]D[D]D]D[D]D]D]B_@D]B]D_@B]B_@D]B]D]F]D[D]F[D]D[D]D[D]D]D_@B]D]B]D_@B]B]D_@B]B_@D]D]D]D]D]D[D]D[D]D]D]D]B]B_@B_@@_@@_@@_@B_@B_@@_@B_@B]B_@B_@@_@@_@B_@@_@@_@@_@@a@?_@@_@@_@@_@?a@@_@@_@?_@?a@?_@?_@A_@Aa@A_@A_@A_@C]C_@C_@C]E]C]E]G]E[G[GYG[GYGWIYIWGYIWIWIUIWIWIWIUIWIUIWIUIWIUIWIUIWIUIWIUKWIUIUIUIWIUKUIWIUIWIUIUIUKWIUIUIUKUIUIUIUKUIUIUKUIUISKUIUKSIUKSIUKSIUKUISKUISKSIUKSISKUKSISKSKSKQISKQKSKQKQKSKQKQIQKSKQKSKQKQKSIQKSKQKSISKQKSKQKQKQKQKQKQKQKQKOKQKQKOKQKOKQKOMOKOKMKOMOKMKMMMKMMMKKMMMKKMMKKKMMKKMKMKKKMKKKMMMKKKMKMKKIMKMKKIMIMKMIMIKIMIMIMKKIMIMIMKMIKIMIMIMKMIMIMIKIMIMKMKKMMMKMKQKQKSKSIUIWIWGYG[GYG]E[E]E]E]E]E]E]C]E]E]E]C]E_@E]C]E]E]E]E[C]E]E]E]E]E]Ik@CMGk@COE[G]E[E[E]G[E[G[E]G[GYE[G[GYIYGYGYIYGYGYIYGYGYIYG[GYIYGYGYIYGYGYIYGYGYIYGYGYG[IYGYGYIYGYG[IYGYIYGYGYIYGYIYGYGYIYGWIYGYGYIYGYIYGYGYIYGYIYGYGYIYGYGYIYGYIYGYGYIYGYG[G[GYG]E[G[E]E]E]E]E]C]E_@C]E]C_@E]C_@A_@C_@A_@Aa@A_@?_@Aa@?_@?_@?a@?_@?_@?a@@_@?_@@a@@_@@_@@_@@_@@_@B_@@_@B_@@_@B_@B_@B_@B]@_@B_@B_@B_@B_@@]B_@@_@B_@@_@B_@@_@?_@@a@?_@A_@A_@A_@C_@A_@C_@C_@C]C_@C_@C]C_@C_@C_@C]C_@C_@C_@C_@A_@C_@C]C_@C_@A_@C_@C_@A_@C]C_@A_@C_@C_@C]A_@C_@C_@C]C_@E]C_@E]E[G]E[G[G[E[G[G[E[G[G[E[G[G[G[", "LastUpdated": 1685069610, "Comments": ""}]
    # Convert data to JSON
    json_data = json.dumps(data)
    #add data as the content of response and encode it 
    response._content=json_data.encode("utf8")
    expected_parsed_object = {"Id": 77, "LocationDescription": "from Taylor Hwy to Canadian Border", "Overall Status": "Fair", "Surface Conditions": [], "Atmospheric Conditions": [], "Warnings": ["Do not pass", "Drive with headlights on", "Reduce your speed", "Snow removal equipment on roadway", "Stay back 200 feet from snowplows", "Crew and machinery working in the area"], "Snow (inches) Min": None, "Temperature (F) Min": None, "Wind Type": None, "Wind Direction": None, "Wind Speed (MPH) Min": None, "Snow (inches) Max": None, "Temperature (F) Max": None, "Wind Speed (MPH) Max": None, "AreaName": "O'Brien/Eagle/Southfork", "RoadwayName": "Top of the World Highway", "EncodedPolyline": "mcnfKp}t}YRYVa@\\o@JSHSJUHUHWHWHWFYHYFYD]D[D]D]B_@B_@B_@@_@@_@@_@@_@?a@@_@?a@?_@?_@?a@?_@Aa@?_@Aa@?_@A_@Aa@A_@?a@Ac@A]?_@?_@?a@?a@@_@@_@@a@@_@B_@B]D_@B_@B]D_@B]B_@D]B_@D_@B]D_@B]D_@B]D]D]D_@D]D]D[F]F[FYHYFWJUHSJSJQJSJQJQJSJQJSHQJQJSJQJSJQHUJSHUJUHWHUHWHWHWHYFWHWHWHWJUHUJSHSJSJQJQJQJQJQLQJQJOJQJOJQLOJOJOLMJMLKLKLKJILILILELGLELELELGLELGLELILGLILKJKLMJKLOJMLOJMLOJMLMJMLMJMLKJKLKLKLILILILGLGLGLGLGLELGJGNGJGLGLGLILGLGLELGLELELENELELCLCLALCN?L?L?L?L@N@L@L?L@L?N@L?L?L?NALALALALALANALAL?LALAL?NAL?L?L?L?N?L@L@L@L@LBNBLBLBLBLDLDLDLDLDLDLDNBLBL@LBL@L?L@N?L?LAL?LALCLANALALALALAL?NALALALALALCLALCLCLENELELELGLGLGLILGJGLGLGNGLELCLELCLCLALCNCLCLELELGLGLIJKLKLMJOJMLQJQJQHSJUHUHUHYFWHYF[FYD[F[D[F]D[D]D]D]F]D]D]D]B]D]D]D]D]D]D]F]D]D[D]D]F]D[D]F[F[FYFYHYFWHWHWHUJUHUJSJSHSJSJQJSJQJQHSJQJQJQJQLOJQJOJOJOJQLMJOJOLMJMLKLKJILILGLGLGLGLELELELELCLELCLELELCLENCLCLCLCLCLAL?LAN?L?L?L@L?N@L@L@L@LBL@NBLBLDLBLBLBLBL?N@L?LALALCLELGLILKJKLMJOJQJQHQJSHUHWHWHYDYF]D[D]D]B]D_@B]B_@B_@B_@@_@B_@B]@a@B_@@]B_@B_@B_@@_@@_@@_@@a@A_@?_@A_@C_@E]E]E]G[E[G[G[G[E[G[G[E[G[G[E[G[G]E[E]E]E]C_@E]C_@C]E_@C]C_@C]C_@C_@C_@C_@C_@C_@A_@A_@?a@?_@@a@?_@@_@@a@?_@@a@A_@?_@C_@Aa@C]E]E]E]G]E]E]C]E]E]E_@C]E]E_@C]E]C_@E]C_@C]C_@E]C_@C_@C]C_@E]C_@C_@C]E_@C]C_@E]C_@C]E_@C_@C]C_@E]C_@C_@C]E_@C_@C]C_@C_@C_@A_@C_@A_@Aa@A_@A_@A_@?a@A_@?a@?_@?a@?_@?_@?a@@_@?a@@_@Ba@@_@B_@B]B_@B]D_@D]D]D[F[D]F[D[F]D[D]D]D]D]B]B_@D_@@]B_@B_@@_@B_@@_@Ba@@_@@_@@_@B_@@_@@_@@a@B_@@_@@_@@_@B_@@_@B_@B_@B_@@_@B_@D_@B]B_@D]B_@B]D_@B]D]B_@D]B_@D]B]D_@B]D]D_@B]B_@D]B_@D]B_@D]B]D_@D]B]D_@D[F]D[F[FYHYHWHWJSHSJQLOJMLKLILGLELGLELELCLELENCLELELELCLELELELELELELCLELENELCLELELCLELCLELELCNELELCLELELELELGLGLELILGLIJILKLILKJKLMJKLMJMLMJMLMJMLMJOLMJMLMJMLOJMLMJMLMJMLMJMLMJMLKLKJKLILILGLGLELCLCLANAL?L?L@L@LBNBLDLDLFLFLFLFLFLFLFJFLHLFLHLFLHLHLJLHLHJHLHLHLJLHJJLHLJLJLHLJJHLFLDNBL@LALELGLIJMJQJSHUHWFYFYF[F[F[D[F[F]D[F[D[F[F[F]D[FYF]F[D[F[F[D[F[F[D]F[D[F[D]F[D]F[D]F[D[D]F]D[D]D]F]D]D[D]D_@D[D]D]D]D]F]D[D]F[D]F[D[F[F[F[HYFYFYHYHWFWHYHWHWHUHWHWHWHWHUHWHWHUHWHWHUHWJWHUHWHWFWJWFUHWHWHWHWHWHUJWHWHUHWHWFWHWHWHYHWFWHYHWFYHWHYFWHYFYHYFWHYFYHYFYHYFWHYFYHYFYHYFYHYFYHYFYFYHYFYF[FYF[F[D[F[F[D[F]D[D]F]D[D_@B]D]D]B]D_@B]B_@B_@B_@B]B_@B_@@_@B_@@_@@a@@_@B_@@_@@a@?_@@_@@a@@_@@_@?a@@_@@_@@a@@_@@_@?a@@_@@a@@_@@_@@_@?a@@_@@a@@_@?_@@a@@_@@_@@a@@_@?_@@a@@_@@_@@a@@_@B_@@_@@_@Ba@@_@B_@B]@_@B_@B_@D_@B]B_@D_@B]D]D]B]D_@F]D[D]D]D]D]D]D[F]D]D]D[D]F]D[D]D]F[D]D]D[D]F]D]D]D]D[D]F]D]D[D]D]F[D]D]D]D[F]D]D]D]D]D[D]D]D]D]D]D]D]D]D]B_@D]D]D]B_@D]D]B_@D]D]B]D_@B]D_@D]B]D_@B]D]D_@B]D]B_@D]B_@D]B_@D]B_@B]D_@B]B_@B_@@_@B_@@_@B_@@a@@_@?_@@a@?_@@_@?a@?_@?_@?a@?_@?a@?_@?a@?_@?_@?a@?_@?a@?_@?a@?_@?a@?_@?_@?a@?_@?a@?_@?_@@a@@_@@_@@_@Ba@@]B_@B_@B_@B_@B]B_@D_@B]B_@B]D_@B]B_@B]D_@B]B_@B_@B]B_@D]B_@B_@B]B_@D]B_@B]D_@B]B_@D]B]D_@B]D]D]D]D]F[F[F[FYF[FYFYF[HYF[FYF[FYHYFYF[FYFYH[FYF[FYF[FYF[FYH[FYF[FYFYF[HYFYHWFYHYHWFWHYHWHWFYHWHWHWHWHWHWHUHWHWFWHYHWHWHWHWHWFWHWHWHYHWFWHWHYHWFYHYFYFYF[F[F[D[D]D]D]D]D]B]D_@B]D_@B]B_@B_@@_@B]B_@@_@@a@@_@@_@@_@@a@?_@?_@@a@?_@@a@?_@?_@?a@?_@@a@A_@?a@?_@?a@?_@?a@?_@?a@?_@?_@?a@@_@?a@?_@?a@?_@?a@@_@?_@@a@?_@@a@@_@?_@@a@B_@@_@@_@@a@B_@@_@B_@B_@@_@B_@@_@B_@@_@B_@B_@@_@B_@@_@B_@@_@B_@B_@@_@B_@B_@@_@B_@B_@@_@B_@B_@@_@B_@B_@@_@Ba@@_@B]@a@B_@B_@@]Ba@B_@@]Ba@B]@_@B_@@a@B_@B_@@_@B_@B_@@_@B_@@_@B_@B_@@_@B]B_@B_@D_@B]D]B_@D]B]D_@D]D[D]F]D[D]F[D]F[F[D[F[F[D]F[F[D[F[F[F[D[F[F[D[F]F[F[D[F[F[F[D[FYF[F[F[D[F[F[F[F[FYF[FYF[FYF[FYFYF[FYH[FYFYFYH[FYFYFYF[FYH[FYFYF[FYF[FYHYF[FYFYHYF[FYF[FYF[HYFYFYF[HYFYFYF[HYFYFYHYF[FYHYFYFYHYFYFYH[FYFYF[FYF[FYH[FYF[F[FYF[FYF[FYF[FYFYF[HYF[FYFYFYH[FYFYF[HYFYFYF[HYFYFYF[FYHYF[FYFYH[FYFYFYH[FYFYF[HYFYFYF[FYHYFYF[HYFYFYHYF[FYFYF[F[FYF[F[F[D[F[D]F]D[D]D]D]D]B]D]D_@D]D]B]D]D_@D]D]B]D]D]D]B_@D]D]D]B_@D]D]B]D_@D]D]D]B]D]D]D]D]D]D_@B]D]D]D]D]B_@D]D]D]B]D_@D]D]B]D]D_@D]D]B]D]D]D]D_@B]D]D]D]B_@D]D]B]D_@D]B]D]D_@D]B]D_@B]D]B_@D]B_@B]B_@B_@D_@B]B_@B_@B_@@]B_@B_@B_@B_@B_@B_@@_@B_@@_@B_@@_@B_@@_@@_@Ba@@_@@_@@_@@_@Ba@@_@@_@@a@?_@@_@@_@@a@@_@@_@@a@@_@?_@@a@@_@?_@@a@@_@@_@?a@@_@@_@?a@@_@?_@@a@@_@?a@@_@?_@@a@@_@?_@@a@@_@@_@?a@@_@@_@?a@@_@@_@?a@@_@@_@?a@@_@@_@?a@@_@@a@?_@@_@@a@?_@@_@@a@?_@@_@@a@?_@@a@@_@?_@@a@?_@@_@@a@@_@?_@@a@@_@?a@@_@@_@?a@@_@@_@?a@@_@?_@@a@@_@?a@@_@@_@?a@@_@?a@@_@?_@@a@?_@@a@?_@@_@?a@?_@@a@?_@?a@?_@?_@@a@?_@?a@?_@@a@?_@?_@?a@A_@?a@?_@A_@?a@A_@A_@?a@A_@A_@A_@Aa@A_@?a@A_@A_@A_@C_@A_@C_@E]AOKi@GYIWIWIWIUEKIUIUIWIUIWIUIWIWOe@CKKg@E]C_@C_@A_@?a@?_@@_@@a@B_@@_@@_@@_@@a@B_@@_@@_@@_@Ba@@_@@_@@_@B_@?OBq@@O@_@Bo@?OB_@@q@@O@_@@_@Ba@@_@@_@Bo@@_@@a@B_@@_@@_@B_@@a@@_@@_@B_@@_@@a@@_@@_@B_@@_@@_@Ba@@_@@_@B_@@_@@_@B_@@_@B_@@_@@a@B_@@_@@_@B_@@_@@_@B_@@_@@_@@a@@_@B_@@_@@_@B_@@_@@_@Do@@_@B_@@_@B_@B]@_@@_@B_@B_@@_@@MB_@D]B_@B_@B]D]B_@B]D_@B]B_@B]B_@B]D_@B]B_@@_@B_@B_@@_@@_@@_@@_@?_@@a@@_@@_@?_@@a@@_@@_@@_@?a@@_@?_@?a@@_@?_@?a@A_@?_@?a@@_@?a@@_@@_@B_@@_@B_@B_@B_@@]B_@B_@B_@@_@B_@B_@@_@B_@@_@B_@@_@B_@@_@B_@@_@B_@@a@B]Ba@@_@B_@B]@_@B_@B_@B_@B_@D]B_@D]B_@B]D_@B]D]D_@B]D]D_@B]D]D]B]D_@D[D]F]D]F[D[F[FYF[FYHYFYF[HYFYFYHYFYFYHYFYFYFYHYFYFYHYFWHYHWFYHWHWHWHWHWHUHWHWHUHWHUHWHWHUHWHWHWHUHWHWHWFWHWHWHWHUHWHWHWHUHWHWHWHWHUHWHWHWHUHWHWHUHWFWHWHWHUHWHYFWHYFYD[F]D[D]B_@B_@B]@_@B_@@_@B_@@_@@_@@a@@_@@_@@_@@_@B_@@_@@_@@_@B_@@_@B_@@_@B_@B_@B_@@]B_@B_@D]B_@B]D]B_@D]D]B]D]D]D]B]D]D]D]D]D]D]B]D]D]B]B_@D]B]B_@B_@B]D_@B]B]D]D_@D[D]D]D[F]D[D[F]D[F[D]F[D[F[D[F]D[D]D]D[D]D]D]B_@D]B]D_@B]B_@D]B]D]F]D[D]F[D]D[D]D[D]D]D_@B]D]B]D_@B]B]D_@B]B_@D]D]D]D]D]D[D]D[D]D]D]D]B]B_@B_@@_@@_@@_@B_@B_@@_@B_@B]B_@B_@@_@@_@B_@@_@@_@@_@@a@?_@@_@@_@@_@?a@@_@@_@?_@?a@?_@?_@A_@Aa@A_@A_@A_@C]C_@C_@C]E]C]E]G]E[G[GYG[GYGWIYIWGYIWIWIUIWIWIWIUIWIUIWIUIWIUIWIUIWIUIWIUKWIUIUIUIWIUKUIWIUIWIUIUIUKWIUIUIUKUIUIUIUKUIUIUKUIUISKUIUKSIUKSIUKSIUKUISKUISKSIUKSISKUKSISKSKSKQISKQKSKQKQKSKQKQIQKSKQKSKQKQKSIQKSKQKSISKQKSKQKQKQKQKQKQKQKQKOKQKQKOKQKOKQKOMOKOKMKOMOKMKMMMKMMMKKMMMKKMMKKKMMKKMKMKKKMKKKMMMKKKMKMKKIMKMKKIMIMKMIMIKIMIMIMKKIMIMIMKMIKIMIMIMKMIMIMIKIMIMKMKKMMMKMKQKQKSKSIUIWIWGYG[GYG]E[E]E]E]E]E]E]C]E]E]E]C]E_@E]C]E]E]E]E[C]E]E]E]E]E]Ik@CMGk@COE[G]E[E[E]G[E[G[E]G[GYE[G[GYIYGYGYIYGYGYIYGYGYIYG[GYIYGYGYIYGYGYIYGYGYIYGYGYG[IYGYGYIYGYG[IYGYIYGYGYIYGYIYGYGYIYGWIYGYGYIYGYIYGYGYIYGYIYGYGYIYGYGYIYGYIYGYGYIYGYG[G[GYG]E[G[E]E]E]E]E]C]E_@C]E]C_@E]C_@A_@C_@A_@Aa@A_@?_@Aa@?_@?_@?a@?_@?_@?a@@_@?_@@a@@_@@_@@_@@_@@_@B_@@_@B_@@_@B_@B_@B_@B]@_@B_@B_@B_@B_@@]B_@@_@B_@@_@B_@@_@?_@@a@?_@A_@A_@A_@C_@A_@C_@C_@C]C_@C_@C]C_@C_@C_@C]C_@C_@C_@C_@A_@C_@C]C_@C_@A_@C_@C_@A_@C]C_@A_@C_@C_@C]A_@C_@C_@C]C_@E]C_@E]E[G]E[G[G[E[G[G[E[G[G[E[G[G[G[", "LastUpdated": 1685069610, "Comments": "", "vwid": "ec7f70a58856a70963d2b73d42a634529578b1fb5f8d6045bfbe274979dc89c0"}
    result=stream.parse_response(response,stream_state=MagicMock())
    parsed_object = next(result)
    vwid=parsed_object.get("vwid")
    assert vwid is not None
    expected_parsed_object['vwid'] = vwid
    assert parsed_object == expected_parsed_object
  